import React, { useState, useEffect } from 'react';
import './GeneratedList.css'; // Import your CSS file

function GeneratedList() {
  const [selectedQuarter, setSelectedQuarter] = useState('');
  const [quarters, setQuarters] = useState([]);
  const [employeeData, setEmployeeData] = useState([]);
  const [isLoading, setIsLoading] = useState(true);

  useEffect(() => {
    const fetchQuarters = async () => {
      try {
        const response = await fetch('http://127.0.0.1:5000/getDistinctQuarters');
        const data = await response.json();
        setQuarters(data);
      } catch (error) {
        console.error('Error fetching quarters:', error);
      }
    };

    fetchQuarters();
  }, []);

  useEffect(() => {
    const fetchData = async () => {
      if (!selectedQuarter) {
        return;
      }

      try {
        const response = await fetch(`http://127.0.0.1:5000/getListedEmployee?quarter=${selectedQuarter}`);
        const data = await response.json();
        setEmployeeData(data);
        setIsLoading(false);
      } catch (error) {
        console.error('Error fetching data:', error);
        setIsLoading(false);
      }
    };

    fetchData();
  }, [selectedQuarter]);

  const exportToCSV = () => {
    const csvContent = 'data:text/csv;charset=utf-8,' +
      'Generated By,Listed Employee,Quarter Year\n' +
      employeeData.map(item =>
        `${item.generatedBy},${item.userName},${item.quarter}`
      ).join('\n');

    const encodedUri = encodeURI(csvContent);
    const link = document.createElement('a');
    link.setAttribute('href', encodedUri);
    link.setAttribute('download', 'employee_data.csv');
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
  };

  return (
    <div className="container">
      <label>
        Select Quarter:
        <select value={selectedQuarter} onChange={(e) => setSelectedQuarter(e.target.value)}>
          <option value="">Select Quarter</option>
          {quarters.map((quarter, index) => (
            <option key={index} value={quarter}>
              {quarter}
            </option>
          ))}
        </select>
      </label>

      <div className="table-container">
        {isLoading ? (
          <p className="loading">Data will Only Load, Once you select Quarter...</p>
        ) : (
          <table>
            <thead>
              <tr>
                <th>Generated By</th>
                <th>Listed Employee</th>
                <th>Quarter Year</th>
              </tr>
            </thead>
            <tbody>

            {employeeData.map((employee, index) => (
              <tr key={index}>
                <td>{employee.userName}</td>
                <td>{employee.employee}</td>
                <td>{employee.quarterStart}</td>
              </tr>
            ))}

            </tbody>
          </table>
        )}
      </div>

      <button onClick={exportToCSV}>Download CSV</button>
    </div>
  );
}

export default GeneratedList;
